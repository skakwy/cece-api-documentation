<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Document</title>
    <link rel="stylesheet" href="style.css" />

</head>

<body>
    <div class="container">

        <div class="sideBar">
            <div class="topContainer">
                <div class="top">
                    <svg width="26" height="26" viewBox="0 0 14 15" fill="none" xmlns="http://www.w3.org/2000/svg">
                        <path
                            d="M8.94469 14.7263C3.73185 14.6879 4.17392 14.6948 4.01054 14.6455C3.76205 14.5702 3.57808 14.4497 3.41608 14.2567C3.08934 13.8692 3.03854 13.3229 3.28703 12.8725C3.34332 12.7684 3.66046 12.4508 7.6432 8.47352C10.0059 6.1159 11.9801 4.1567 12.0309 4.1211C12.2355 3.97187 12.4579 3.90204 12.7256 3.90204C12.937 3.90204 13.0812 3.93627 13.2734 4.03074C13.585 4.18545 13.8033 4.44284 13.9022 4.77965C13.9365 4.89465 13.9434 4.94805 13.9489 5.16847C13.9571 5.44914 13.9983 11.9319 13.9997 13.0149C14.001 13.6652 13.9997 13.709 13.9695 13.8226C13.8335 14.3456 13.386 14.7112 12.8382 14.7495C12.775 14.7523 11.0232 14.7427 8.94469 14.7263Z" />
                        <path
                            d="M1.13572 11.5883C0.727974 11.5321 0.369651 11.2884 0.18843 10.9434C0.0964467 10.7668 0.0580059 10.6093 0.0511412 10.3547C0.0442768 10.1096 0.00171748 3.61042 0.000344578 2.48501C-0.00102829 1.82647 0.00034458 1.78266 0.0305482 1.67039C0.145871 1.2309 0.4836 0.892731 0.922923 0.780464C1.0355 0.750344 1.08218 0.748975 1.73979 0.750344C2.83261 0.751713 9.36479 0.792786 9.6229 0.801001C9.81785 0.806477 9.87688 0.814692 9.98946 0.847551C10.3258 0.947496 10.5867 1.16519 10.7404 1.47461C10.8365 1.66765 10.8695 1.81141 10.8695 2.02225C10.8695 2.2728 10.805 2.49049 10.6718 2.69038C10.6073 2.78759 2.08438 11.287 1.96906 11.3706C1.73567 11.5403 1.4103 11.6252 1.13572 11.5883Z" />
                    </svg>

                    <div class="apiName">Cece api</div>
                </div>
            </div>
            <div class="middleContainer">
                <div class="middle">
                    <input class="sideBarSearch" placeholder="Jump to" />
                    <div id="sideBarList" class="list">

                    </div>
                </div>

            </div>
        </div>

        <div class="mainWindow">
            <div class="mainWindowContainer" id="mainWindowContainer">
                <!-- <h1>Getting Started</h1>
            <h4 style="margin-top:0;color:#687583">Lorem ipsum dolor sit amet, consectetur adipisicing elit </h4> -->
                <div class="topicContainer">
                    <div class="topic">title</div>
                    <div class="titleHeaderDescription">titlte the title</div>
                    <div class="contentOfTopic">
                        <div class="header">update a users profile</div>
                        <div class="pathForReqeuest"><span>GET </span>user/update/</div>
                        <div class="description">update a users profile</div>
                        <div class="requestClass">Request</div>
                        <div class="parameterContainer">
                            <div class="parameterContainerChild">
                                <div>userToken</div><input id="paramName" placeholder="string" />
                            </div>
                            <div class="parameterContainerChild">
                                <div>userToken</div><input id="paramName" />
                            </div>
                            <div class="parameterContaineButtons">
                                <button class="clearButton">Clear</button>
                                <button class="tryButton">Try</button>
                            </div>
                        </div>
                        <div class="requestClass">Response</div>
                        <div class="responseContainer">
                            <div class="responseTextContainer">
                                <button class="copyButton">copy</button>
                                <code class="reponseText">
 {
    "status": "success",
    "message" : "user updated successfully"
 }
                        </code>
                            </div>
                        </div>
                    </div>

                </div>
            </div>
        </div>
    </div>
    <script>


        function turnLightButtonOn() {
            document.getElementsByClassName("lightModeBtn")[0].style.display = "flex";
        }
        function turnLightButtonOff() {
            document.getElementsByClassName("lightModeBtn")[0].style.display = "none";
        }
        async function loadSites() {
            let response = await fetch("docs.json");
            let data = await response.json();
            // set siteBarList
            let sideBarList = document.getElementById("sideBarList");
            for (i = 0; i < data["content"].length; i++) {
                //container
                let listChild = document.createElement("div");
                listChild.classList.add("listChild");
                //topic button
                let button = document.createElement("button");
                button.innerHTML = data["content"][i]["topic"];
                button.addEventListener("click", parsedObj => {
                    document.getElementById(parsedObj.currentTarget.innerHTML).scrollIntoView({
                        behavior: 'smooth'
                    });
                });
                listChild.appendChild(button);
                //create children
                let childrenList = document.createElement("div");

                for (ii = 0; ii < data["content"][i]["content"].length; ii++) {
                    let child = document.createElement("button");
                    child.innerHTML = data["content"][i]["content"][ii]["header"];
                    child.classList.add("children");
                    child.addEventListener("click", parsedObj => {
                        document.getElementById(parsedObj.currentTarget.innerHTML).scrollIntoView({
                            behavior: 'smooth'
                        });
                    });
                    listChild.appendChild(child)
                }


                sideBarList.appendChild(listChild);

            }
        }
        async function loadContent() {
            let response = await fetch("docs.json");
            let data = await response.json();
            for (i = 0; i < data["content"].length; i++) {
                //title of section
                topicContainer = document.createElement("div");
                topicDiv = document.createElement("div");
                topicDiv.classList.add("topic");
                topicDiv.innerHTML = data["content"][i]["topic"];
                topicContainer.appendChild(topicDiv);
                //description of section
                descriptionDiv = document.createElement("div");
                descriptionDiv.classList.add("titleHeaderDescription");
                descriptionDiv.innerHTML = data["content"][i]["description"];
                topicContainer.appendChild(descriptionDiv);
                //content of section
                for (ii = 0; ii < data["content"][i]["content"].length; ii++) {
                    tempCurrent = data["content"][i]["content"][ii];
                    contentOfTopic = document.createElement("div");
                    contentOfTopic.classList.add("contentOfTopic");
                    //content header
                    contentHeader = document.createElement("div");
                    contentHeader.classList.add("header");
                    contentHeader.innerHTML = tempCurrent["header"];
                    contentHeader.id = tempCurrent["header"];
                    contentOfTopic.appendChild(contentHeader);
                    //content path
                    contentPath = document.createElement("div");
                    contentPath.classList.add("pathForReqeuest");
                    contentPath.innerHTML = "<span>" + tempCurrent["method"] + "</span>" + tempCurrent["path"];
                    contentOfTopic.appendChild(contentPath);
                    //content description
                    contentDescription = document.createElement("div");
                    contentDescription.classList.add("description");
                    contentDescription.innerHTML = tempCurrent["description"];
                    contentOfTopic.appendChild(contentDescription);
                    //content request
                    contentRequest = document.createElement("div");
                    contentRequest.classList.add("requestClass");
                    contentRequest.innerHTML = "Request";
                    contentOfTopic.appendChild(contentRequest);
                    //content parameter container
                    contentParameterContainer = document.createElement("div");  
                    contentParameterContainer.classList.add("parameterContainer");
                    //content parameter container child
                    for (iii = 0; iii < tempCurrent["bodyParameters"].length; iii++) {
                        contentParameterContainerChild = document.createElement("div");
                        contentParameterContainerChild.classList.add("parameterContainerChild");
                        //content parameter container child name
                        contentParameterContainerChildName = document.createElement("div");
                        contentParameterContainerChildName.innerHTML = tempCurrent["bodyParameters"][iii]["name"];
                        contentParameterContainerChild.appendChild(contentParameterContainerChildName);
                        //content parameter container child input
                        contentParameterContainerChildInput = document.createElement("input");
                        contentParameterContainerChildInput.id = tempCurrent["bodyParameters"][iii]["name"];
                        contentParameterContainerChildInput.placeholder = tempCurrent["bodyParameters"][iii]["type"];
                        contentParameterContainerChild.appendChild(contentParameterContainerChildInput);
                        contentParameterContainer.appendChild(contentParameterContainerChild);
                    }
                    //content parameter container buttons
                    contentParameterContainerButtons = document.createElement("div");
                    contentParameterContainerButtons.classList.add("parameterContaineButtons");
                    //content parameter container buttons clear
                    contentParameterContainerButtonsClear = document.createElement("button");
                    contentParameterContainerButtonsClear.classList.add("clearButton");
                    contentParameterContainerButtonsClear.innerHTML = "Clear";
                    contentParameterContainerButtonsClear.addEventListener("click", parsedObj => {
                        let parent = parsedObj.currentTarget.parentElement.parentElement;
                        for (i = 0; i < parent.children.length; i++) {
                            if (parent.children[i].children[1].value != "") {
                                parent.children[i].children[1].value = "";
                            }
                        }
                    });
                    contentParameterContainerButtons.appendChild(contentParameterContainerButtonsClear);
                    //content parameter container buttons send
                    contentParameterContainerButtonsSend = document.createElement("button");
                    contentParameterContainerButtonsSend.classList.add("sendButton");
                    contentParameterContainerButtonsSend.innerHTML = "Send";
                    contentParameterContainerButtonsSend.addEventListener("click", parsedObj => {
                        let parent = parsedObj.currentTarget.parentElement.parentElement;
                        let body = {};
                        for (i = 0; i < parent.children.length; i++) {
                            if (parent.children[i].children[1].value != "") {
                                body[parent.children[i].children[0].innerHTML] = parent.children[i].children[1].value;
                            }
                        }
                        console.log(body)
                    
                    });
                    contentParameterContainerButtons.appendChild(contentParameterContainerButtonsSend);
                    contentParameterContainer.appendChild(contentParameterContainerButtons);
                    contentOfTopic.appendChild(contentParameterContainer);

                    topicContainer.appendChild(contentOfTopic);
                }

         


                document.getElementById("mainWindowContainer").appendChild(topicContainer);
            }
        }
        loadSites()
        loadContent()



        // child.addEventListener("click", parsedObj => {
        //                 document.getElementById(parsedObj.currentTarget.innerHTML).scrollIntoView({
        //                     behavior: 'smooth'
        //                 });
        //             });


    </script>
</body>

</html>